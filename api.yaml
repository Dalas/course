swagger: "2.0"
info:
  version: 0.0.1
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
host: 127.0.0.1:9000
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/user:
    post:
      tags:
        - Registration
        - Users
      description: |
        Register new user
      parameters:
        - name: body
          in: body
          description: Users data
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        201:
          description: User successfully created
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiErrorResponse'

  /v1/login:
    post:
      tags:
        - Registration
        - Users
      description: |
        Register new user
      parameters:
        - name: body
          in: body
          description: Users data
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        201:
          description: User successfully created
          schema:
            properties:
              token:
                type: string
        403:
          description: Invalid login or password
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiErrorResponse'

  /v1/storehouse:
    get:
      tags:
        - StoreHouse
      description: |
        Get all storehouses
      parameters:
        - in: header
          name: 'token'
          description: Authorization token
          required: true
          type: string
#        - name: body
#          in: body
#          description: Users data
#          required: true
#          schema:
#            $ref: '#/definitions/StoreHouseObject'
      responses:
        200:
          description: User successfully created
          schema:
            type: array
            items:
              $ref: '#/definitions/StoreHouseObject'
        403:
          description: Login required
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiErrorResponse'

definitions:

  ApiError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  ApiErrorResponse:
    required:
      - error
      - data
    properties:
      error:
        type: object
        schema:
          $ref: '#/definitions/ApiError'
      data:
        type: object

  CreateUserRequest:
    required:
      - login
      - password
      - confirm_password
    properties:
      login:
        type: string
      password:
        type: string
      confirm_password:
        type: string
  LoginRequest:
    required:
      - login
      - password
    properties:
      login:
        type: string
      password:
        type: string

  StoreHouseObject:
    properties:
      _id:
        type: string
      title:
        type: string
      capacity:
        tipe: number
